
@function calc-em($target-px, $context) {
 @return ($target-px / $context) * 1em;
}

/* sets all box widths to the size declared. Border and padding DO NOT expand the size but squish the content.*/
* { -moz-box-sizing: border-box; -webkit-box-sizing: border-box; box-sizing: border-box; }

$em:16px; //16px is browser default
body{
 font-size:$em;
}

$break-small:480px;
$break-medium:840px;
$break-wide:960px;

$column-count-small:2;
$column-count-medium:6;
$column-count-wide:12;
$gutter:20px;

@mixin content-width($width){
  max-width:$width;
  margin:0 auto;
  position:relative;
  z-index:1;
}

@mixin create_columns($name,$break, $column-count){
  @for $i from 1 through $column-count {
    .grid-#{$name}-#{$i} {
      @include column-width($break, $i, $column-count);
    }
  }
}

@mixin column-width($break, $column, $column-count){
  width:percentage((($break/$column-count*$column)/$break));
  padding:0 calc-em($gutter/2, $em);
  float:left;
}

//Small Screen
@media screen and (max-width: calc-em($break-small, $em)) {
  .region{
    @include content-width($break-small);
    min-width:320px;
    padding-right:0;
    padding-left:0;
  }
  @include create_columns('small',$break-small, $column-count-small);
}

//Medium Screen
@media screen and (min-width: calc-em($break-small + 1px, $em)) and (max-width: calc-em($break-medium, $em)) {
  .region{
    @include content-width($break-medium);
  }
  @include create_columns('medium',$break-medium, $column-count-medium);
}

//Wide Screen
@media screen and (min-width: calc-em($break-medium + 1px, $em)) {
  .region{
    @include content-width($break-wide);
  }
  @include create_columns('wide', $break-wide, $column-count-wide);
}


